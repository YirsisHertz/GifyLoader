{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifyApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","width","height","src","alt","href","rel","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifyApp","defaultCategories","categories","ReactDOM","render","document","querySelector"],"mappings":"wTAqCeA,G,MAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,MAAU,CAACP,MACzBC,EAAc,MAKhB,SACE,uBACEO,UAAU,OACVC,YAAY,mBACZC,KAAK,OACLC,MAAOX,EACPY,SAnBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,c,8BCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACT,mCACNC,EAFe,iDAEiCC,UACpDH,GAHmB,6BACT,oCADS,SAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCMPO,G,YAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKT,UAAU,2CAAf,UACE,qBAAKuB,MAAM,MAAMC,OAAO,MAAMC,IAAKhB,EAAKiB,IAAKP,IAC7C,kCAAKA,EAAL,OACA,mBACEnB,UAAU,uCACV2B,KAAMlB,EACNU,MAAOA,EACPO,IAAKP,EAAQ,OACbS,IAAI,aACJvB,OAAO,SANT,2BCJOwB,G,MAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECJb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNgB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACR3B,EAAQC,GAAU2B,MAAK,SAACC,GACtBH,EAAS,CACPlB,KAAMqB,EACNL,SAAS,SAGZ,CAACvB,IAEGwB,EDV2BK,CAAa7B,GAAjCa,EADyB,EAC/BN,KAAcgB,EADiB,EACjBA,QAEtB,OACE,qCACE,qBAAI9B,UAAU,oCAAd,cAAoDO,EAApD,OAECuB,GACC,sBAAK9B,UAAU,oBAAf,UACE,wBACA,wBACA,2BAIJ,qBAAKA,UAAU,YAAf,SACGoB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,cEDjBmB,G,MAjBC,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IACV/C,mBAAS+C,GADC,mBACvCC,EADuC,KAC3BjD,EAD2B,KAG9C,OACE,qCACE,oBAAIU,UAAU,6CAAd,wBACA,cAAC,EAAD,CAAaV,cAAeA,IAC5B,uBACA,6BACGiD,EAAWvB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,aCRxBiC,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,cAAc,Y","file":"static/js/main.a4886700.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./AddCategory.css\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 1) {\r\n      setCategories((cats) => [inputValue]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"text\"\r\n        placeholder=\"Search: ej. Goku\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\n  const key = \"sU2u86pEn8MX8RY5F1EizU2r8Fyr8FmI\";\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=21&api_key=${key}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./loading.css\";\r\nimport \"./GifGridItem.css\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInUp\">\r\n      <img width=\"400\" height=\"300\" src={url} alt={title} />\r\n      <p> {title} </p>\r\n      <a\r\n        className=\"ox-btn ox-btn-success ox-btn-rounded\"\r\n        href={url}\r\n        title={title}\r\n        alt={title + \".gif\"}\r\n        rel=\"noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        Download\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport \"./GifGrid.css\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__zoomIn\"> {category} </h3>\r\n\r\n      {loading && (\r\n        <div className=\"load lds-facebook\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\nimport \"./GifyApp.css\";\n\nconst GifyApp = ({ defaultCategories = [] }) => {\n  const [categories, setCategories] = useState(defaultCategories);\n\n  return (\n    <>\n      <h1 className=\"title animate__animated animate__heartBeat\">GifyLoader</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifyApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport \"./normalize.css\";\n\nimport GifyApp from \"./GifyApp\";\n\nReactDOM.render(<GifyApp />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}